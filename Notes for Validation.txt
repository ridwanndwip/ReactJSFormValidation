Jika Anda ingin menggunakan metode filter() untuk memeriksa apakah username sudah digunakan, Anda dapat melakukannya dengan cara berikut:

const data = [
  { identityNumber: 221425234, username: 'windah', numberPhone: +6285162742502, password: 'password1' },
  { identityNumber: 221425534, username: 'ronaldo123', numberPhone: +6285161743502, password: 'password2' },
  { identityNumber: 221425236, username: 'ricardokaka', numberPhone: +6285161342502, password: 'password3' },
  { identityNumber: 221425230, username: 'ridwan', numberPhone: +6285153452532, password: 'password4' },
];

const filteredUsers = data.filter(user => user.username === form.email);

if (filteredUsers.length > 0) {
  newError.email = 'Email already used';
}

-----------------------------------------------------------------

Menggunakan metode array seperti some() untuk mengecek keberadaan username yang sama di dalam data tersebut.

const data = [
  { identityNumber: 221425234, username: 'windah', numberPhone: +6285162742502, password: 'password1' },
  { identityNumber: 221425534, username: 'ronaldo123', numberPhone: +6285161743502, password: 'password2' },
  { identityNumber: 221425236, username: 'ricardokaka', numberPhone: +6285161342502, password: 'password3' },
  { identityNumber: 221425230, username: 'ridwan', numberPhone: +6285153452532, password: 'password4' },
];

if (data.some(user => user.username === form.email)) {
  newError.email = 'Email already used';
}


some() adalah metode array di JavaScript yang digunakan untuk mengecek apakah setidaknya satu elemen dalam array memenuhi kondisi tertentu. Metode ini mengembalikan true jika ada minimal satu elemen yang memenuhi kondisi, dan false jika tidak ada elemen yang memenuhi kondisi tersebut.

Sintaks
array.some(callback(element, index, array), thisArg);

callback: Fungsi yang akan dijalankan untuk setiap elemen dalam array.
element: Elemen saat ini yang sedang diperiksa.
index: (Opsional) Indeks elemen saat ini.
array: (Opsional) Array asli yang sedang diperiksa.
thisArg: (Opsional) Nilai this untuk digunakan di dalam callback.

Contoh Penggunaan
Contoh Sederhana: Mengecek apakah ada angka yang lebih besar dari 10 dalam array.

const numbers = [2, 5, 8, 15, 4];
const hasNumberGreaterThan10 = numbers.some(number => number > 10);
console.log(hasNumberGreaterThan10); // Output: true
Di sini, some() mengembalikan true karena ada elemen (15) yang lebih besar dari 10.

Validasi Unik dalam Daftar Pengguna: Mengecek apakah ada username tertentu dalam data.

const users = [
  { username: 'alice' },
  { username: 'bob' },
  { username: 'charlie' }
];

const isUsernameTaken = users.some(user => user.username === 'bob');
console.log(isUsernameTaken); // Output: true
Di sini, some() mengembalikan true karena ada user dengan username 'bob' dalam array users.